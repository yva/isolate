- name: create groups
  become: yes
  group:
    name: "{{item.value.group}}"
  with_dict: "{{ygroups}}"    

- name: create keys dir
  become: yes
  file: 
    dest: "{{deploy_path}}/keys"
    mode: 0700
    state: directory
    owner: auth
    group: root

- name: touch keys
  become: yes
  file:
    path: "{{item.value.key}}"
    state: touch
    mode: 0600
    owner: auth
    group: auth
  with_dict: "{{ygroups}}"

- name: set keys
  become: yes
  copy:
    dest: "{{item.value.key}}"
    mode: 0600
    owner: auth
    group: auth
    content: "{{ lookup('env',item.value.keyenv) }}"
  with_dict: "{{ygroups}}"
  when: lookup('env',item.value.keyenv) | length > 0 

- name: create configs dir
  become: yes
  file: 
    dest: "{{deploy_path}}/configs"
    state: directory
    mode: 0755
    owner: auth
    group: auth

- name: create settings
  become: yes
  copy: 
    content: "{{ygroups|to_json}}"
    dest: "{{deploy_path}}/configs/settings.json"
    mode: 0644
    owner: auth
    group: auth

- name: ssh settngs
  become: yes
  copy:
    src: defaults.conf
    dest: "{{deploy_path}}/configs/defaults.conf"
    mode: 0644
    owner: auth
    group: auth

- name: Allow specified groups to sudo
  become: yes
  template: 
    src: sudoers.j2
    dest: /etc/sudoers.d/sudoers
    validate: 'visudo -cf %s'
    owner: root
    group: root
    mode: 0440

- name: remove previous from sudoers
  become: yes
  lineinfile: 
    path: /etc/sudoers
    regexp: "{{item}}"
    state: absent
    validate: 'visudo -cf %s'
    mode: 0440
  with_items: 
    - '^%auth '
    - 'Defaults:%auth '
